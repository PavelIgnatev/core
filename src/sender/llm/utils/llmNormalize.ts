import emojiRegex from 'emoji-regex';

export function fullNormalize(message: string): string {
  let normalized = message
    .replace(/\*/g, '')
    .replace(/!/g, '.')
    .replace(emojiRegex(), '')
    .replace('<ASSISTANT>:', '')
    .replace('<ASSISTANT>', '')
    .replace(/[`『』「」]/g, '')
    .replace('т.me', 't.me')
    .replace('т.ме', 't.me')
    .replace('т. ме', 't.me')
    .replace('т.мe', 't.me')
    .replace('т. мe', 't.me')
    .replace('т.мe', 't.me')
    .replace('т. мe', 't.me')
    .replace('т.me', 't.me')
    .replace('т. me', 't.me')
    .replace('nt.me', 't.me')
    .replace('nt. me', 't.me')
    .replace('т .me', 't.me')
    .replace('т. me', 't.me')
    .replace('т.м', 't.me')
    .replace('т. м', 't.me')
    .replace('т .м', 't.me')
    .replace('тме', 't.me')
    .replace('т ме', 't.me')
    .replace('tm.e', 't.me')
    .replace('t.m', 't.me')
    .replace('т,me', 't.me')
    .replace('т,ме', 't.me')
    .replace('т-me', 't.me')
    .replace('т-ме', 't.me')
    .replace('tme', 't.me')
    .replace('т/me', 't.me')
    .replace('т\\me', 't.me')
    .replace('т;me', 't.me')
    .replace('т:me', 't.me')
    .replace('т_me', 't.me')
    .replace('т_ме', 't.me')
    .replace('т.мз', 't.me')
    .replace('т.мс', 't.me')
    .replace('т.мв', 't.me')
    .replace('т.мa', 't.me')
    .replace('т.мо', 't.me')
    .replace('т|me', 't.me')
    .replace('т|ме', 't.me')
    .replace('г.me', 't.me')
    .replace('г.ме', 't.me')
    .replace('ь.me', 't.me')
    .replace('ь.ме', 't.me')
    .replace('р.me', 't.me')
    .replace('р.ме', 't.me')
    .replace('у.me', 't.me')
    .replace('у.ме', 't.me')
    .replace('е.me', 't.me')
    .replace('е.ме', 't.me')
    .replace('н.me', 't.me')
    .replace('н.ме', 't.me')
    .replace('и.me', 't.me')
    .replace('и.ме', 't.me')
    .replace('о.me', 't.me')
    .replace('о.ме', 't.me')
    .replace('а.me', 't.me')
    .replace('а.ме', 't.me')
    .replace('с.me', 't.me')
    .replace('с.ме', 't.me')
    .replace('в.me', 't.me')
    .replace('в.ме', 't.me')
    .replace('к.me', 't.me')
    .replace('к.ме', 't.me')
    .replace('м.me', 't.me')
    .replace('м.ме', 't.me')
    .replace('п.me', 't.me')
    .replace('п.ме', 't.me')
    .replace('л.me', 't.me')
    .replace('л.ме', 't.me')
    .replace('д.me', 't.me')
    .replace('д.ме', 't.me')
    .replace('ж.me', 't.me')
    .replace('ж.ме', 't.me')
    .replace('з.me', 't.me')
    .replace('з.ме', 't.me')
    .replace('х.me', 't.me')
    .replace('х.ме', 't.me')
    .replace('ц.me', 't.me')
    .replace('ц.ме', 't.me')
    .replace('ч.me', 't.me')
    .replace('ч.ме', 't.me')
    .replace('ш.me', 't.me')
    .replace('ш.ме', 't.me')
    .replace('щ.me', 't.me')
    .replace('щ.ме', 't.me')
    .replace('ъ.me', 't.me')
    .replace('ъ.ме', 't.me')
    .replace('ы.me', 't.me')
    .replace('ы.ме', 't.me')
    .replace('ь.me', 't.me')
    .replace('ь.ме', 't.me')
    .replace('э.me', 't.me')
    .replace('э.ме', 't.me')
    .replace('ю.me', 't.me')
    .replace('ю.ме', 't.me')
    .replace('я.me', 't.me')
    .replace('я.ме', 't.me')
    .replace(/[а-яё]\.me/gi, 't.me')
    .replace(/[а-яё]\.ме/gi, 't.me')
    .replace(/[а-яё]\s*\.\s*me/gi, 't.me')
    .replace(/[а-яё]\s*\.\s*ме/gi, 't.me')
    .replace(/т\s*[\.\,\-\_\|\;\:\\/\\]\s*m[еeз]/gi, 't.me')
    .replace(/[тгьрунио]\s*[\.\,\-\_\|\;\:\\/\\]\s*m[еeз]/gi, 't.me')
    .replace(/[^\S\n]+/g, ' ')
    .replace(/\\n/g, '\n')
    .trim();

  return normalized;
}
