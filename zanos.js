const { MongoClient } = require('mongodb');

let db;

const DB = async () => {
  while (!db) {
    try {
      const client = new MongoClient(
        'mongodb://gen_user:35B%3DR9GTC%5Cq.Xv@82.97.255.185:27017/core?authSource=admin&directConnection=true'
      );
      const connect = await client.connect();
      db = connect.db('fucker');
      break;
    } catch {}
  }

  return db;
};

const getAccountCollection = async () => {
  return (await DB()).collection('accounts');
};

const insertAccount = async (account) => {
  const accountCollection = await getAccountCollection();

  await accountCollection.updateOne(
    { accountId: account.accountId },
    { $set: account },
    { upsert: true }
  );
};

const accountsString = `6f14118e458b71c669abad6c18da8d4a78e72d388e92fe6bad163cfbe6f99c9fa3554e7afeaa5465cdc02e38d0074a20057c46cc0c46ba475561f442748d44611391ac67bbe9eee0ecf99834b23e99c5f9d08daf5d0ab2f7daea25c55dc8b09508fd48996feb403764c0e04812fee6572aed1b850f977b305cf13733c846bed1b88a6d415a0f12a68fd5593d417be5b5ab4e3a5b29d934db333add1492fc6db21e63df587621f35ba96f722c2eded922220f9b64e9ada79cbb069e914a334f854d0cdb9322a26a1b2579d01726f099b11fd09386379055c5bff61ec48e09caab08b2e74a49d4756558c25be5b120fb35caee412fde8d597828e7b9a1702757e5:2
65eacb3b6d60591a39ab993a8f9bed5b7e41b4f04190325011741ccd5488c4e60f3c0eb35278393f1d95e79d2e78466fc6708ed83a2a8233904469839ce55a83e63d682df958f6803cbe7a1e715e492629080860de1cc800184b9196258f583ac39e6f58b762f1a73cb524f6c6c7ef8108bc479474ea36117658a573cba3fccb815be8e8a579c853f319cc0ab253d0122887d16a1735190d1ed947cc83221cb85c8b29253b3d85d91e04e45b47c35f15f1d845b704ee62710f736fe0bbe1e96dab6e1b3b7fc95bdc0157703f78a776ab4890915f2b182d97ea8c73f5020c60474209c0e0bd47cb32cd7f4e667f3a8a52d43862bcc48613a8a89634bf27847349:2
301dc060b8938160de49e1fe4c2f01c5e11037d8eb95b7cfd6a3bc794496123762d1960927ba292bc1476b6c24c36b232aebb230bfbdef5de7fabc7ea97a701df773cc2291bff72d6139f168c415fb7bbc9ba040b8435bb15ec8f9ffc432ae3a01fcb3047d18e986a21bf71fa7a1d81fa00930d22e3ece5e31e7015d077f286d385efee45e6f44b8b4db4c63f6aa91171b55adb49a446198f890cb2b6f336c04d38b02e388862d1a8438e42586da78dfcf1227e4018176803685446bf16dba74ab9f74bc7ff1bd56581dbc883c7528f89e04dc3a79faf19a408426aa32577fe42b021383e491470410d3300e21c8a560be8afbce24090fbc2c6e003cb16e76f7:2
907a75ccefa02feed1ee80c7c322483cc6f4677dbd2a06112ac6b5c355984f11076435d97e7f4892078fc329f4a8c09d1ce3d49faabb121d552d99cefd311b0e6c68637bf2cec6d588a63b5730cc1c96be82550330466657b006e1e2b9fcba6d170e7c75309326d70d68b913c798e08a7a8c5da30e9786365eb85663c5bbae91f5ef127ef99e99da80a9b1d098aed11d13727f94ca3b71bbb5a1027a4b78e2dc1b6ef59067720ac95daef5bb1748740670da479d2b2fe213be8ddf08dbe2e9dfe3efab9893499df999e6fb8b5196bd9235eab5c1379326b86034a5f70e549dc8f2fd6badf4eb9ae01ba98ffc088d16b150357a2f437a8bbddd738cbd9afec8a3:2
0f5b71c8be153642b6829349a41623a186b21c62f1f467b8f9c8d3cc505644d8a32602b6a69cc0c2eec355fdbf8bc9faa4b28e88beb8c728aa958eb9ce5bf09e9ed3a2fd96dc6ab3c83b6e083a2c43e51b814d40c20e96af1c307d9b4b8736b74266c176e5832ffcd4a3237ee62756b719144bfe973c7a35a563fb7933199ba01983f0b09d67ab5b5974b789af37122dcc0b7c847d8e71e45191631e81176057aa75f5ff241d88842f1b8aea9deb09e723973b5190fbbe2aeb7d87eb14a0d481e915726f9664c836eb12e39c5b2130e8fd36d0ec3f4b556c2e02c58c2fd0f3baad328d7f9179cfe19586fe8ea61cd48c6433778361fce7578953771a262f430e:2
6ca1e669d53cd7bb08fab0290d1ba600f1c3555f52ac65ea1afc2fd6d4c84d919ee3749c2072b9c2fd94ff14506243bc6b39c1103915685ef94395e268dd878c98f9b547ab6d49d39129eaa99ac734b2dce7105ba513030ed31ad556f8ea0c8c6740c8b3ad0610a4e2fb150c600a6976b824752f12e2e9a96a6bddb7b74e6b07058432650c2deba26e2c106db07b3057fc953f888ce1c0be3ec217f1ac47d54db5eb01b9a768f0304fa1bf161c1000f52f176e335f70f188a2b748474e2ae620c928b74623fcf2ffd92f8b54d27cf89c1e497fcc69c772a2c66d71f7ce1dff999caef1c5e1efb01e1af2dc1b833dcc8af7d8ec8791b1acadcd90500e25fdae0f:2
0d321af23472c7158a1860d9c088dfdf6ceef2a7878ac30f6309306c740a786c7697f95a6a33456b21a0cb655dc2b7f607505c1186ea3bc004b38f8403bdb222163910ba24b423f599b9802e4a6fb4e9fc15fc1d9f1449b46d02084befa950e01026768920db56bbe567cf21f8c68abd675a0b38b6d6e8b85a536dc53da9a2cad35e34198d8ab5b364b319364c7765bf68f3a2ebfd7819ce6212c9d6d2c917deb58c1c704bf64209c196051a61e2c108c49b32ff188eed5296dde00e562bd24065ef52c4f79c3518ae07873db983e7fd8e0e550fcaa635597f9b9bee839ffab5eb06fce3441c5a2954d1482950902c8b302d84c5f75da26da9b1dec71a73ee6e:2
b0dc841ee3f6fc2759e3063d12ba111621a16ed86531d011f8746d262abbd20b494e3c8145d279a66c953c9688038fb59bae09ee01468f51ec5dec15edf5088968f87d1413190b54dc7aff65215173b007656df0b301a5193355057d079529c969427eabe89e1b2bfc4a4a01dad032c80c2e593fbcfce12fc8fd225d105e9d0fc56b54888ba6e7371cd3dd572415c9d05dbbe95844d3ac6dbbc854f627bc8e5c3989754f86d518f0c0afc962211f5ab0302a0f23b8b964934e3cfececdf7991ed937ad66af8c661b17c1245c8d3e335324188c3020df6e5ff5ed2c69c04987b97bc10df241e208ea610cb747c091fa2d4283caff5e195db208acd59ef4b3c81e:2
63b4fa9da82573f9d829bba62bc76275645fdd4cbb0c78ef7952e6d6e27f2968875177259f50d7390a961fccb335074b6007a34ee70abeebd8a175a5d312f1e25c50b99538eb470a2d35a32e3b27de2fd86b5d933103062d8113474e0999962b93ce806f393bf0902c85b86a5bcaf2d8d91ca6e7ed97dc024db4fd66cd4c877ba0c8e5d657153135b8e0a589624f1b1213eb354c11998432d2d048887be7e8b5babb00ec5400c3721f58eb2f66ac08855ba6d32ccff4bf03c834b1dc5aae673de3387e7f5a791d07d3bbf56e99058b54a151a4675703503382a1123a0ae4d9e0681bc1fc3f6c6e75ec0b07d51a93a6725098ad3684cbdcddac31442a30b74d9c:2
2df4f27ebe274052ec27a8b3ca027540c55d55f9cdc8aa0269b880daec71eef6aa5d852192eece7dd0fa7e64acd5269e2f1e6b5e238d9b1eec2394bc5319316aed78126c719ec19f0a9722db30c84ec97852acca1035c7564672a3af170e1c8702f73a4f39c3976c487f53a06186328582365a10f419a5916968cd48f80f2edf83d4f0b3c25d85e9963e82ef5a7d6846e39888b1a0a9f84454b235333e7dbceaa2b79899d8875383f8597b0bad1e466cbb6292f73d34d5ba517ef80692e3320644e0f7f7ff42631a390322b4f00f11785153bc98151d7fd6524606b02aee2e8e431359a59d0d309dfe57228a9bf96f80efafc47f1b1a64b4faa41cedec1e2bc3:2`;


//  .map((e) => `${e[`dc${e.dcId}`]}:${e.dcId}`)
// .join('\n'))
const accounts = accountsString
  .split('\n')
  .filter(Boolean)
  .map((a) => {
    const s = a.split(':');

    return { authKey: s[0], dcId: s[1] };
  });

const zanos = async () => {
  try {
    for (const account of accounts) {
      const username = account.authKey.slice(0, 32);

      const data = {
        accountId: username,
        dcId: Number(account.dcId),
        prefix: 'test-ru',
      };

      data[`dc${account.dcId}`] = account.authKey;
      await insertAccount(data);
    }
    console.log('VSE');
  } catch (error) {
    console.error('Ошибка при обработке файлов:', error);
  }
};

// Вызываем функцию zanos
zanos().catch((error) => {
  console.error('Ошибка в функции zanos:', error);
});
