const { MongoClient } = require('mongodb');

let db;

const DB = async () => {
  while (!db) {
    try {
      const client = new MongoClient(
        'mongodb://gen_user:%5C%7Dc%3C%24q%3C3j8O_%26g@193.108.115.154:27017/core?authSource=admin&directConnection=true'
      );
      const connect = await client.connect();
      db = connect.db('core');
      break;
    } catch {}
  }

  return db;
};

const getAccountCollection = async () => {
  return (await DB()).collection('accounts');
};

const insertAccount = async (account) => {
  const accountCollection = await getAccountCollection();

  await accountCollection.updateOne(
    { accountId: account.accountId },
    { $set: account },
    { upsert: true }
  );
};

const accountsString = `1eea79b44c844c937868d1d4d07d3b2031e983293e62e480ec481ac6a033816c117f0d01c344673208cf2854c29b1669ba892115dbc3511fb91690ce7934a55b168b71a881cd52c8444b8160144347cdcc0607d4f24f12d28bd1481b3c04b4142bec09ab48d9a3abce68274616792cee0c489c036956b40a333c1da716b0acdb19e211d50a12db3bf23955bc5fb863e352d3cf737ef67dabea10445a4616c8abd5bc952a449ebc88e8bc462d876648146018109f312bce8fefc3efb673aaf9ee4921ce1a915a8308144a45722b51aeca9319f489db238816bdf73527b4f93232337e7e423d213804fbe461bddea5d60aeeac65b87df312767eefba2893e80cdf:1
b1645fc731e7678639b6ef22144e63e6a66b7d762cb8871643b5054f04689bfa5d9025d76559990c517d1f5a7052e8abb977d1cd0ec00173e713f5da1c695578456a7032b5ea94891dd39a9255256553ec298629f695783a1383da871572fcf15e67fae04d94b270c053257dd6698546622a51aad69d903312360ef21073d85ca93e0b11ee08caca4d97a1b5a727b953e9e1b85bda6c31e0b46b9beb263305b9bd656d16f571867c2f4a1356a69ad4c92acc7eebcd2f39a1dfb8f35aeb045386f2431e01faba80f0934b2caf0a4b656958e146e9d3f90894e06dd0182dce96914bc93f523d9210f7cdd46a6e856bc14189a7ee119e12a19966c72a3ec06c30d9:1
018b450cfe2ae3120497d9842b1efdb580fc1699d11b63b53c4965f8004d2d3fc79989f8a65398e94dadce8f42300e11d2c079bf583824b83f34a4e42c74a163980d1c35f8fac85136c9bbdb7ba18bb5659c7deb0612108f0fb7329f54e7076edb139a6c4c672b735148911a80932c719dd1324c05f126d3f017b50e4c54755080fe4eaf58d5bd8d7b04f060d6b9005796d6bf0cc0595577f602a4ae1c96e7c0fbd1b0338def0be765a847fc229ca86090bb13c5a1726521c3950b510dd15f0c102fd2455502cb854a21b8eeca9480cde1393e7b37025d8fb8172fab9484bddb533bd142c3468a949488372b1fc5478e77351bccc86440666117daa03c84aacf:1
39afb110dbe3e360e698baebf31971f04adb6520d535b40990fd129eaf222f2eb01803888ce32c96586ec305745dd9c3cccf8e0ed590614ae074b08c9d95a1c4162c4623aeb99d2aace211ddcd3bb317c0be0d37e7969e555f6232b40ed90865b7a245ab9a65838315d96f6196a5185e3802e9c69c6de2b7055e8b21c16b082d1945eb2b4de22525c92a8ef2c3734091095ed71e5ff66b540e23f0c7dba1995c2971725535c04ea77c0567246236a5b26715483498965a982d437f6dace286c4185a000f75e18003a5fa33491542198b8e389bda5712675a1dd788f6d08b6bb2ec4e425a51c8f0b4017e79d9d5b1387d74b388280aead6bfa365f547b8d48a6c:1
10380ec6ce5f5d5d9cf2455079490e0ea50432c194d4b71d6f0c6dcde910123d986372800bd1e1766a5033f533576cf2f295af48fa55dfc9692115a86f897a5ea9aae4784bc254fc7797b881b61efd6bd805fea311489b83964b2aae291f2ac4c67d6c1ef1686ade2c9a1589c951f6e019dc567bf759a8fa0356e067118bcf38f7a6600339b75216d3985862cef114df4095d72f5bd197f2752f7c530274eb7d57c8e9f10d858262636a58b01f4a06b2c96231da50097613e493b6342e1a29e4a8e47d2b3dc894ece40b01e51e23c169d6edea8602f0b05374dfc4d42070e197bf1033d96c9dfc59a94cbc2fbfc3547fc8242e225b2064c4215f9a9896bead31:1
9bcda15504b26785ee8e00bc5f52ae738886890daccbce2f343b84c3a9201e9024b73a9069c89e8c80337ff80a7e6415c214e52bf65a0e498257483b35d91a6b371838c605ffce0b3c795f2bd5953e5a624e860e658a4f770e32496ba9e60ee2398bfb528791c78fbda245081c66c5bfaf1b9c9a35587f5383aa6a0d09b4020dc43e76c3d906277d75b354b0595efe9e5754ac8c1704e367afdc1bb3aaa28a7a1c8acd2fa674dcc307bfdd5eed71736d0642da98cbe298d12920ec1861f353a9c56f4a68a69668edbeed58f1ecd6242a0306df83438c1dc14b73d965722161eb834d8bcde8b16677c1474087ffb8818b37c6fb1d4afe7c68d17a9d38068313b6:1
17b352b1b65acfbd6bc5b2209ba3ff808ff446031a2e7ac57f4435dc922613f6655381687027b4b50b4b48a42f4188e9b5657709c251e671d78d58e011e777b635a5d94eb7b2d1d7a67848851bba8ae6facb5f0a52513176657125d665a8bce18f2eb249df65c1a7eb149b8d733d9959d06cfac0cc8c50707ef5b3a31586184f43c2c750354d3fc5ac0aa30a3181bc6ef5aa78373867366c72bfcfce124ae0686bf242dc53ff8975d8ac6ca47d8dc1a99f2c4827bde628d44ac3a16391122bd8690396a59d440d4b480fa4d517c429fc0823672bdacdd5ed40770d2031b3db41a22f97032594c1a968bcecc6387fdf8c15d1c68f761a62ea6af19376cb22870a:1
6cf43fd6dc022252769c0f20de01b88b44fee36fbaf38f963e832025cd741cce882ef02df70b1c397f9f2f82754ca5dd73249f84ca1bf0a1a9ed681ded285a3a419f61f5955e83e49e38250729ff4ef587c193396c5362347010ac5090b7a2182d182494933e40de5adb375e55b601f0b51822dbf8ef3d367ce6625d4ba8c1a243bb915d22178274c0b628b2fc5e759f23be24240b21e033b8fa0cc352b643dfa91b47b1a8f794f99d4afc4f1fa5ce411a28bac6887a242c5504d34a626bacb947edf784fd6479dce4b81871d9c944d5880cbc31aca78b7a0e30c0217b25967c6f6a8d558e1bb73f65c1a1f625e5920b3f889b095efdad33227801160c05d8bd:1
be2fdf50b9e6bd63ad45af23840d1da6e57cfc4be1d667cc7256737ce051b8f05d9a8486a12ad9ca40b17eea7ed10fa38646617fc9ca355827ecdcb86206754351cd271943963e256fad2f04a12e4b831199437e72f603fb68bee613500595af1571f3a5c55611cdc810c96d59b6ca66dbc488ffb17fe54ce8ad2a1fde5b1caebc7fedbb6b62e72017a665ece71bf44a02796ca4649c3fa81ff1068b400cf17cba41044c1ce6233643a8d135346cd983d2371587bc34e5c62d782d88487bc74a3ea65438d2ccf966cee5e37a16770adeb0f1c2b2496da4d1618e5d1d88959ca353e620fef5f6a7bdafd691dc0c8fbf0c82930fc0d7311629d4aba7ffde6abee1:1
1a8189daa7993b17222abe28154136b085b23e332cec89d88628ba9aa22d8389207aea296de93e35e120e4966efa0dcb21d9c1458c1605e04224acf1861f007778f1453ba3f271d3ea455e34110f9ecc643f95142779780e8d89e77c83b53631f3097725cc7072bb8a503e7e12725c5f83ad31f8aaa7bef813dcee4455a488d8dde075483fac8843f8b0a602b1243f307f43bf266e531603cac4fddee04fd33fa5db09a400b3cb6e8f974d2d512d5b957a48ced2dddaaa4eab1780e29643b6c5c8c2f0128ef0d2f636f134fa806a685acfb4c80b31f62272a47fcd8d0309ac47eb497fbc5b30894f64e493fe7d25161d16e5cc02648567d3be3c12e02ef0924a:1
84abe85ea0aca69421ea4f67d579525b019006eb46414fc9ca323526c771cef21a223690c624924105adf14edf428c81d5ab61bcd21481dbf526d3a5533cbbf47a0e41b5358330606388d2591addda96bc2755b77888db02a91b8147c01c045a821a4ad3f51a44eee018fc9ac4b47b991a2ad381dee2b8b27c1d48da3ab6a35869fec0146ac56a6578be1ddd4d89b07366490b1a9dbd0fc8e661f7359ee32008f49e367c7e83329a5ba59149cb5bcda6e3d4ebe03522f9b7a1cff504a99b245958bb341651f56f1220cfb9b67bd7ef7c783dd11c5411c35f8ce8e87647a2eceee315603cadc77a7877e0c49f1d7e4db294aa2419729c3c6ec55dacf8a4a0d536:1
104fdeb250d3ccbfd96929a8853a4aef5a5a884b94cc11fca0c05d5030b3a1634851c99718a78da7e748332bc6004c5cc1f2c9cd02e32a18935e3e0f8e20ad680561d84843e1af0664b6a3ad18ea8f0e3233dc05a5e38f3f2e842f92ae7b395c8150f4f3a520ee2e85868a42508049f285fc7afbe87547bdc4ac44872ababa21742c8d68a059416fc33f6dd6d4a8e6644e7eb865b0dcae08c0e1fc7b778a692693d04d63c7975a9c999979c0fd99cf0c60a0890846c8eae239da5a7ca2b6126e69999e7cc3f572c2cc1f71b2ea8adb6fdcb91855037d19208cd64f381b055a3126cc55718c3993aace7a0c761bc4796df391e73c9540aabb6555e57db1d0c6c2:1
c6d8b4dec5a8bc48c616c8183b806dfdefab047f9095d0cab8d6d0135f912a6f24013e5c333768fb4747bbb983d0062549f0267fee1751fd4190cb618c6823b1f16b6f977ff361cc37762a90364c1c985140ef42df2161878d21751f7b560b6d78f25622d2a4e798212b6130181af6b677806464cece2b9e3a99b8962273bac2553c02a9312b11ebab868cc7954b6004013ef8ddc0ffa0aaa4cb5cf0cda78d3de2d74f1ff7ec2f8b409c72b1f97f4f466dd00cd6f5501b017e5670444566b911a79c621f63943ac7311ce322d2ed44842ab53cc22ec06b9d5bf7967040c48205d8c7c648bde1e9028f6bcdb4621e3c549b6682f8335860281bc45d4bbf7c4280:1
5ba18a75710f7197d5ae7d1459ad9c2be8a6197ee20b2adf4b510c3dd77fa1250b949133894641c3f4098e8e38314b5c7bbc00b306a8776c8dafa7908d4e880923355cc94a836bdb09ceb897c61ae43d288d5a47d3a2206752fa6529ce6925972a72c4d606fbe09c458b186ab83a066bcf41e16bfd54ddaba899a749d18d11e7b00bdc764609c7a1081f66dcbce73bf673abd0925fd1ec087e049cb13485d78bb76cb4c478d5f139547a8173b0a4366f1daef20311b5cde99c852cb565d1249171fd84b099679441852f604b818b184d24f1b56f186ec6b12f65da0d157eafce5e797af6fddf3c0f75ade60da91ee528cdd3eda82afad8eda5cd8f8b76561deb:1
4228b2eff18939c637ff6d003b0b7da1c039879a2e0bd754b76cc124787d025c246b60a35c7c130b920310d4bf2d1652748136ba916b24bdc4b8b8da942df4096849cff010e0cdc5cde0a2bcb483ce2f63fcf57364789e96f6be2b7d986716a050b17a49bd7ac0faf48d1007049b6a80fa32ac9fc5cebee3ff12eef36160e9da5066974feef4743137ed89470be460d3223d3aefbefe8fe7de5f7551df93af3ad68578cab802e1bf9a39082830815ec4d8e77fb3fa4083c83e4f1fc6f314dfc1678b84d268b499030b578807c84d9c7d910c13789e94bb4161bc2d4e40a9bd85edad1b1036259c8b0b5f1f8f44667d0d5e010a2516df1d89f7d3fc6a032bd3e1:1`;

//
//
//
//
//
//  .map((e) => `${e[`dc${e.dcId}`]}:${e.dcId}`)
// .join('\n'))
const accounts = accountsString
  .split('\n')
  .filter(Boolean)
  .map((a) => {
    const s = a.split(':');

    return { authKey: s[0], dcId: s[1] };
  });

const zanos = async () => {
  try {
    for (const account of accounts) {
      const username = account.authKey.slice(0, 32);
      console.log(username);

      const data = {
        accountId: username,
        dcId: Number(account.dcId),
        prefix: 'web2',
      };

      data[`dc${account.dcId}`] = account.authKey;
      await insertAccount(data);
    }
    console.log('VSE');
  } catch (error) {
    console.error('Ошибка при обработке файлов:', error);
  }
};

// Вызываем функцию zanos
zanos().catch((error) => {
  console.error('Ошибка в функции zanos:', error);
});
